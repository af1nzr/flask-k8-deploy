name: CI-CD to Minikube

on:
  push:
    branches:
      - main

jobs:
  deploy-to-minikube:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ghcr.io/af1nzr/flask-k8
      NAMESPACE: flask-k8-namespace
      HOST_NAME: flask-k8.example.com

    steps:
    # ✅ Checkout repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # ✅ Install Minikube inside runner
    - name: Setup Minikube
      uses: medyagh/setup-minikube@latest

    # ✅ Verify cluster is running
    - name: Check Minikube Status
      run: kubectl get nodes

    # ✅ Login to GHCR
    - name: Docker login to GHCR
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

    # ✅ Build and push image to GHCR
    - name: Build & Push Docker Image
      run: |
        IMAGE_TAG=${IMAGE_NAME}:${GITHUB_SHA::7}
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    # ✅ Create Kubernetes namespace if not exists
    - name: Create Namespace
      run: |
        kubectl get ns $NAMESPACE || kubectl create ns $NAMESPACE

    # ✅ Create Kubernetes secret for GHCR
    - name: Create Docker Registry Secret
      run: |
        kubectl delete secret ghcr-secret -n $NAMESPACE --ignore-not-found
        kubectl create secret docker-registry ghcr-secret \
          --docker-server=ghcr.io \
          --docker-username=${{ secrets.GHCR_USERNAME }} \
          --docker-password=${{ secrets.GHCR_TOKEN }} \
          --namespace $NAMESPACE

    # ✅ Deploy manifests
    - name: Apply Kubernetes Manifests
      run: |
        kubectl apply -n $NAMESPACE -f k8/deployment.yml
        kubectl apply -n $NAMESPACE -f k8/service.yml
        kubectl apply -n $NAMESPACE -f k8/ingress.yml

    # ✅ Install ingress controller (NGINX) & wait correctly
    - name: Install Ingress Controller
      run: |
        minikube addons enable ingress
        echo "✅ Waiting for ingress controller to be ready..."
        kubectl get ns
        kubectl get all -A | grep ingress || true
        kubectl wait --namespace ingress-nginx \
          --for=condition=available deployment/ingress-nginx-controller --timeout=180s

    # ✅ Update /etc/hosts inside runner
    - name: Add Host Entry
      run: |
        echo "$(minikube ip) $HOST_NAME" | sudo tee -a /etc/hosts

    # ✅ Test the deployed app via ingress
    - name: Test App via Ingress
      run: curl -v http://$HOST_NAME
